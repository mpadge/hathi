% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/hathi_bib.r
\name{hathi_bib}
\alias{hathi_bib}
\title{HathiTrust bibliographic API}
\usage{
hathi_bib(oclc = NULL, lccn = NULL, issn = NULL, isbn = NULL,
  htid = NULL, recordnumber = NULL, ids = list(), which = "brief",
  searchfor = "single", ...)
}
\arguments{
\item{oclc}{OCLC Number. Will be normalized to just digits.}

\item{lccn}{Will be normalized as recommended}

\item{issn}{Will be normalized to just digits}

\item{isbn}{Will be normalized to just digits (and possible trailing X). ISBN-13s will be left
alone; ISBN-10s will search against both the ISBN-10 and the ISBN-13}

\item{htid}{The HathiTrust Volume ID of a particular volume (e.g., mdp.39015058510069)}

\item{recordnumber}{The 9-digit HathiTrust record number, as described above.}

\item{ids}{A list of length 1 or more, with lists or vectors inside with many ids
to search for}

\item{which}{(character) One of brief or full.}

\item{searchfor}{(character) One of single or many.}

\item{...}{Further args passed on to httr::GET, see examples}
}
\description{
HathiTrust bibliographic API
}
\examples{
\dontrun{
# Search for a sinlge item by single identifier
hathi_bib(oclc=424023)
hathi_bib(oclc=424023, which='full')
hathi_bib(htid='mdp.39015058510069')
hathi_bib(lccn='21019671')
hathi_bib(recordnumber='009585561')
hathi_bib(issn='9781149102480')

# Search for a single item by many identifiers
hathi_bib(htid='BJD1', oclc=424023, isbn='0030110408')
hathi_bib(htid='BJD1', oclc=424023, isbn='0030110408', which='full')

# Search for many items by a single identifier each
hathi_bib(lccn='70628581', isbn='0030110408', searchfor='many')

# Search for many items by many identifiers each
hathi_bib(ids=list(list(htid='BJD1', oclc=424023, isbn='0030110408'),
                   list(lccn='70628581', isbn='0030110408')), searchfor='many')

# Curl debugging
library("httr")
hathi_bib(oclc=424023, config=verbose())
}
}
\seealso{
\code{hathi} for description of the output of this function.
}

